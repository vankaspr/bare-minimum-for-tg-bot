from datetime import datetime
from aiogram.types import User, Message
from src.config import support_group_id
from src.settings import bot
from src.core.middlewares import logger


async def format_support_message(user: User, issue: str) -> str:
    """Formats a message for sending to support."""
    current_time = datetime.now().strftime("%d.%m.%Y, %H:%M")
    return (
        f"‚ö†Ô∏è <b>Support</b> | New request\n\n"
        f"üë§ From: @{user.username}\n\n"
        f"üÜî : <code>{user.id}</code>\n\n"
        f"üìÖ Date: {current_time}\n\n"
        f"<b>üì© Issue:</b>\n\n"
        f"<blockquote>{issue}</blockquote>"
    )


async def process_support_message(
    message: Message,
):
    """Process user support request"""
    try:
        from src.core.keyboards import support_kb

        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
        support_message = await format_support_message(message.from_user, message.text)

        await bot.send_message(
            chat_id=support_group_id, text=support_message, parse_mode="HTML"
        )
        await message.answer(
            "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É!\n"
            "–†–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É –∫–∞–∫ —Ç–æ–ª—å–∫–æ, —Ç–∞–∫ —Å—Ä–∞–∑—É üòá",
            reply_markup=support_kb(),
        )

        return True

    except Exception as e:
        logger.error(f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞.\n" "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return False
