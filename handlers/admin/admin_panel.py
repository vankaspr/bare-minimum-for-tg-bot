"""
    Handler for command --> /admin
    Handler for callback --> admin:admin
    Handler for callback --> admin:stats
    Handler for callback --> admin:payments
    Handler for callback --> admin:users
    Handler for callback --> admin:error_logs
    Handler for callback --> admin:broadcast
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from filters.is_admin import IsAdmin
from keyboards import admin_kb, users_kb
from services import add_back_to_home_button
from settings.middlewares import logger
from config import admin
from utilities.error_logs import get_error_logs

admin_router = Router()
admin_router.callback_query.filter(IsAdmin(admin))


@admin_router.callback_query(F.data == "admin:admin")
async def admin(callback: CallbackQuery):
    """Get admin keyboards"""
    await callback.answer()
    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å –∫–æ–ª–±—ç–∫–∞")
    await callback.message.answer(
        "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...\n"
        "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...‚õèÔ∏è",
        reply_markup=admin_kb()
    )


@admin_router.message(F.text == "/admin")
async def admin_panel(message: Message):
    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å –∫–æ–º–∞–Ω–¥—ã")

    await message.answer(
        "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...\n"
        "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...‚õèÔ∏è",
        reply_markup=admin_kb()
    )

# TODO: –°–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–∞–ª–±—ç–∫–æ–≤ + –≤—Å—é –ª–æ–≥–∏–∫—É –∫ –Ω–∏–º
@admin_router.callback_query(F.data == "admin:stats")
async def get_admin_stats(callback: CallbackQuery):

    await callback.answer()
    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∫–æ–ª–±—ç–∫–∞")
    await callback.message.answer(
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–µ–∂–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    )

@admin_router.callback_query(F.data == "admin:users")
async def get_admin_users(callback: CallbackQuery):

    await callback.answer()
    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞–∑–¥–µ–ª–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö —Å –∫–æ–ª–±—ç–∫–∞")
    await callback.message.answer(
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–µ–∂–∞—Ç—å –µ—â—ë –æ–¥–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"
        "–ì–¥–µ –±—É–¥–µ—Ç –≤—Å—ë –ø—Ä–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        reply_markup=users_kb()
    )

@admin_router.callback_query(F.data == "admin:broadcast")
async def get_admin_broadcast(callback: CallbackQuery):

    await callback.answer()
    logger.info("–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å –∫–æ–ª–±—ç–∫–∞")
    await callback.message.answer(
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–µ–∂–∞—Ç—å –ø—Ä–∏–±–ª—É–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫",
    )

@admin_router.callback_query(F.data == "admin:error_logs")
async def get_admin_logs(callback: CallbackQuery):
    await callback.answer("‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –ª–æ–≥–∏...")

    logs = await get_error_logs()
    back = InlineKeyboardMarkup(inline_keyboard=[])

    if not logs:
        await callback.message.answer(
            "üì≠ –ù–µ—Ç —Å–≤–µ–∂–∏—Ö –æ—à–∏–±–æ–∫ ERROR/WARNING/DEBUG",
            reply_markup=add_back_to_home_button(back)
        )
    else:
        await callback.message.answer(
            f"<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:</b>\n"
            f"<pre>{logs}</pre>",
            parse_mode="HTML",
            reply_markup=add_back_to_home_button(back)
        )


@admin_router.callback_query(F.data == "admin:payments")
async def get_admin_payments(callback: CallbackQuery):

    await callback.answer()
    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–∞—Ö —Å –∫–æ–ª–±—ç–∫–∞")
    await callback.message.answer(
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–µ–∂–∞—Ç—å –∏–Ω—Ñ–∞ –æ –ø–ª–∞—Ç–µ–∂–∞—Ö"
        "–ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —è –≤–∫–ª—é—á—É –ø–ª–∞—Ç–µ–∂–∏",
    )
